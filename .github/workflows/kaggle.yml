name: Online Competition

on:
  push:
    branches: [main, master]
  workflow_dispatch:

jobs:
  online-competition:
    # ðŸ‘‰ Skip on upstream repo â€“ nur auf deinem Fork laufen lassen
    if: ${{ github.repository != 'utiasDSL/lsy_drone_racing' }}
    runs-on: ubuntu-latest

    env:
      KAGGLE_USERNAME: ${{ secrets.KaggleUsername }}
      KAGGLE_KEY: ${{ secrets.KaggleKey }}

    steps:
      ############################################################
      # ---- Quellcode holen ------------------------------------#
      ############################################################
      - uses: actions/checkout@v4
        with:
          submodules: recursive   # <-- acados-Submodul gleich mitklonen

      ############################################################
      # ---- Micromamba-Umgebung --------------------------------#
      ############################################################
      - uses: mamba-org/setup-micromamba@v1
        with:
          micromamba-version: "2.1.0-0"
          environment-name: test-env
          init-shell: bash
          create-args: python=3.12
          cache-environment: true

      ############################################################
      # ---- Projekt-AbhÃ¤ngigkeiten -----------------------------#
      ############################################################
      - name: Install Python package (inkl. online_submission & tests)
        run: pip install .[online_submission,test]
        shell: micromamba-shell {0}

      ############################################################
      # ---- acados vorbereiten ---------------------------------#
      ############################################################
      - name: Download tera_renderer (non-interactive)
        run: |
          mkdir -p acados/bin
          curl -L https://github.com/acados/tera_renderer/releases/download/v0.0.34/t_renderer-v0.0.34-linux \
            -o acados/bin/t_renderer
          chmod +x acados/bin/t_renderer
        shell: micromamba-shell {0}

      - name: Build acados (Release)
        run: |
          sudo apt-get update && sudo apt-get install -y build-essential cmake
          cd acados
          mkdir -p build && cd build
          cmake .. \
            -DCMAKE_BUILD_TYPE=Release \
            -DACADOS_WITH_QPOASES=ON \
            -DACADOS_WITH_OPENMP=OFF \
            -DACADOS_INSTALL_DIR=$GITHUB_WORKSPACE/acados
          make -j$(nproc)
          make install            # installiert nach $GITHUB_WORKSPACE/acados
        shell: micromamba-shell {0}

      ############################################################
      # ---- acados_template installieren -----------------------#
      ############################################################
      - name: Install acados_template
        run: pip install ./acados/interfaces/acados_template
        shell: micromamba-shell {0}

      ############################################################
      # ---- Umgebungsvariablen fÃ¼r Python ----------------------#
      ############################################################
      - name: Export acados env vars
        run: |
          echo "ACADOS_SOURCE_DIR=$GITHUB_WORKSPACE/acados" >> $GITHUB_ENV
          echo "LD_LIBRARY_PATH=$GITHUB_WORKSPACE/acados/lib:\$LD_LIBRARY_PATH" >> $GITHUB_ENV
        shell: bash              # env-Vars mÃ¼ssen im Aufrufer-Shell gesetzt werden

      ############################################################
      # ---- Simulation + Submission ----------------------------#
      ############################################################
      - name: Run simulation tests (kaggle.py)
        run: python scripts/kaggle.py
        shell: micromamba-shell {0}

      - name: Export submission to Kaggle
        run: kaggle competitions submit -c lsy-drone-racing-ss-25 -f submission.csv -m "Automated submission"
        shell: micromamba-shell {0}
